<?php

/**
 * FacebookPhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class FacebookPhoto extends BaseFacebookPhoto
{
    /**
     * function setFields($data)
     * -------------------------
     * populate the object member variables
     *
     * @param array $data array of data to populate the object with
     */
	public function setFields($data)
	{
		if(!empty($data['id'])) { $this->setFbId($data['id']); }
		if(!empty($data['app_album_id'])) { $this->setAppAlbumId($data['app_album_id']); }
		if(!empty($data['fb_album_id'])) { $this->setFbAlbumId($data['fb_album_id']);}
		if(!empty($data['name'])) { $this->setName($data['name']); }
		if(!empty($data['picture'])) { $this->setPicture($data['picture']); }
		if(!empty($data['source'])) { $this->setSource($data['source']); }
		if(!empty($data['height'])) { $this->setHeight($data['height']); }
		if(!empty($data['width'])) { $this->setWidth($data['width']); }
		if(!empty($data['images'][0]['height'])) { $this->setImageOneHeight($data['images'][0]['height']); }
		if(!empty($data['images'][0]['width'])) { $this->setImageOneWidth ($data['images'][0]['width']); }
		if(!empty($data['images'][0]['source'])) { $this->setImageOneSource($data['images'][0]['source']); }
		if(!empty($data['images'][1]['height'])) { $this->setImageTwoHeight($data['images'][1]['height']); }
		if(!empty($data['images'][1]['width'])) { $this->setImageTwoWidth($data['images'][1]['width']); }
		if(!empty($data['images'][1]['source'])) { $this->setImageTwoSource($data['images'][1]['source']); }
		if(!empty($data['images'][2]['height'])) { $this->setImageThreeHeight($data['images'][2]['height']); }				
		if(!empty($data['images'][2]['width'])) { $this->setImageThreeWidth($data['images'][2]['width']); }				
		if(!empty($data['images'][2]['source'])) { $this->setImageThreeSource($data['images'][2]['source']); }								
		if(!empty($data['images'][3]['height'])) { $this->setImageFourHeight($data['images'][3]['height']); }				
		if(!empty($data['images'][3]['width'])) { $this->setImageFourWidth($data['images'][3]['width']); }				
		if(!empty($data['images'][3]['source'])) { $this->setImageFourSource($data['images'][3]['source']); }								
		if(!empty($data['link'])) { $this->setLink($data['link']); }								
		if(!empty($data['icon'])) { $this->setIcon($data['icon']); }								
		if(!empty($data['created_time'])) { $this->setFbCreatedTime($data['created_time']); }								
		if(!empty($data['updated_time'])) { $this->setFbUpdatedTime($data['updated_time']); }								
		if(!empty($data['position'])) { $this->setPosition($data['position']); }								
		if(!empty($data['comments']['data'])) { $this->setComments(serialize($data['comments']['data'])); }								
		if(!empty($data['live_in_photos'])) { $this->setLiveInPhotos($data['live_in_photos']); }				
		if(!empty($data['live_on_homepage'])) { $this->setLiveOnHomepage($data['live_on_homepage']); }										
	}

    /**
     * function getBackendPhoto()
     * --------------------------
     * @return HTML for image source
     */
	public function getBackendPhoto()
	{
		echo '<img src="'.$this->getImageThreeSource().'"/>';
	}

    /**
     * function getPhoto()
     * ------------------
     * @return string path to image
     */
	public function getPhoto()
	{
		return $this->getImageTwoSource();		
	}

    /**
     * function getPhotoLightbox()
     * ---------------------------
     * @return string path to image
     */
	public function getPhotoLightbox()
	{
		return $this->getImageOneSource();		
	}
	
	/**
     * function getHomePagePhoto()
     * ---------------------------
     * @return string path to image
     */
	public function getHomePagePhoto()
	{
		return $this->getImageTwoSource();
	}	

    /**
     * function getHomePagePhotoLightbox()
     * -----------------------------------
     * @return string path to image
     */
	public function getHomePagePhotoLightbox()
	{
		return $this->getImageOneSource();
	}	
	
}
