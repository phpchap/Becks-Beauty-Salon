<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FacebookPhoto', 'doctrine');

/**
 * BaseFacebookPhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $app_album_id
 * @property string $fb_id
 * @property string $fb_album_id
 * @property string $name
 * @property string $picture
 * @property string $source
 * @property string $height
 * @property string $width
 * @property string $image_one_height
 * @property string $image_one_width
 * @property string $image_one_source
 * @property string $image_two_height
 * @property string $image_two_width
 * @property string $image_two_source
 * @property string $image_three_height
 * @property string $image_three_width
 * @property string $image_three_source
 * @property string $image_four_height
 * @property string $image_four_width
 * @property string $image_four_source
 * @property string $link
 * @property string $icon
 * @property string $fb_created_time
 * @property string $fb_updated_time
 * @property integer $position
 * @property text $comments
 * @property boolean $live_in_photos
 * @property boolean $live_on_homepage
 * 
 * @method integer       getId()                 Returns the current record's "id" value
 * @method integer       getAppAlbumId()         Returns the current record's "app_album_id" value
 * @method string        getFbId()               Returns the current record's "fb_id" value
 * @method string        getFbAlbumId()          Returns the current record's "fb_album_id" value
 * @method string        getName()               Returns the current record's "name" value
 * @method string        getPicture()            Returns the current record's "picture" value
 * @method string        getSource()             Returns the current record's "source" value
 * @method string        getHeight()             Returns the current record's "height" value
 * @method string        getWidth()              Returns the current record's "width" value
 * @method string        getImageOneHeight()     Returns the current record's "image_one_height" value
 * @method string        getImageOneWidth()      Returns the current record's "image_one_width" value
 * @method string        getImageOneSource()     Returns the current record's "image_one_source" value
 * @method string        getImageTwoHeight()     Returns the current record's "image_two_height" value
 * @method string        getImageTwoWidth()      Returns the current record's "image_two_width" value
 * @method string        getImageTwoSource()     Returns the current record's "image_two_source" value
 * @method string        getImageThreeHeight()   Returns the current record's "image_three_height" value
 * @method string        getImageThreeWidth()    Returns the current record's "image_three_width" value
 * @method string        getImageThreeSource()   Returns the current record's "image_three_source" value
 * @method string        getImageFourHeight()    Returns the current record's "image_four_height" value
 * @method string        getImageFourWidth()     Returns the current record's "image_four_width" value
 * @method string        getImageFourSource()    Returns the current record's "image_four_source" value
 * @method string        getLink()               Returns the current record's "link" value
 * @method string        getIcon()               Returns the current record's "icon" value
 * @method string        getFbCreatedTime()      Returns the current record's "fb_created_time" value
 * @method string        getFbUpdatedTime()      Returns the current record's "fb_updated_time" value
 * @method integer       getPosition()           Returns the current record's "position" value
 * @method text          getComments()           Returns the current record's "comments" value
 * @method boolean       getLiveInPhotos()       Returns the current record's "live_in_photos" value
 * @method boolean       getLiveOnHomepage()     Returns the current record's "live_on_homepage" value
 * @method FacebookPhoto setId()                 Sets the current record's "id" value
 * @method FacebookPhoto setAppAlbumId()         Sets the current record's "app_album_id" value
 * @method FacebookPhoto setFbId()               Sets the current record's "fb_id" value
 * @method FacebookPhoto setFbAlbumId()          Sets the current record's "fb_album_id" value
 * @method FacebookPhoto setName()               Sets the current record's "name" value
 * @method FacebookPhoto setPicture()            Sets the current record's "picture" value
 * @method FacebookPhoto setSource()             Sets the current record's "source" value
 * @method FacebookPhoto setHeight()             Sets the current record's "height" value
 * @method FacebookPhoto setWidth()              Sets the current record's "width" value
 * @method FacebookPhoto setImageOneHeight()     Sets the current record's "image_one_height" value
 * @method FacebookPhoto setImageOneWidth()      Sets the current record's "image_one_width" value
 * @method FacebookPhoto setImageOneSource()     Sets the current record's "image_one_source" value
 * @method FacebookPhoto setImageTwoHeight()     Sets the current record's "image_two_height" value
 * @method FacebookPhoto setImageTwoWidth()      Sets the current record's "image_two_width" value
 * @method FacebookPhoto setImageTwoSource()     Sets the current record's "image_two_source" value
 * @method FacebookPhoto setImageThreeHeight()   Sets the current record's "image_three_height" value
 * @method FacebookPhoto setImageThreeWidth()    Sets the current record's "image_three_width" value
 * @method FacebookPhoto setImageThreeSource()   Sets the current record's "image_three_source" value
 * @method FacebookPhoto setImageFourHeight()    Sets the current record's "image_four_height" value
 * @method FacebookPhoto setImageFourWidth()     Sets the current record's "image_four_width" value
 * @method FacebookPhoto setImageFourSource()    Sets the current record's "image_four_source" value
 * @method FacebookPhoto setLink()               Sets the current record's "link" value
 * @method FacebookPhoto setIcon()               Sets the current record's "icon" value
 * @method FacebookPhoto setFbCreatedTime()      Sets the current record's "fb_created_time" value
 * @method FacebookPhoto setFbUpdatedTime()      Sets the current record's "fb_updated_time" value
 * @method FacebookPhoto setPosition()           Sets the current record's "position" value
 * @method FacebookPhoto setComments()           Sets the current record's "comments" value
 * @method FacebookPhoto setLiveInPhotos()       Sets the current record's "live_in_photos" value
 * @method FacebookPhoto setLiveOnHomepage()     Sets the current record's "live_on_homepage" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFacebookPhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('facebook_photo');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('app_album_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('fb_id', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('fb_album_id', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('picture', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('source', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('height', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('width', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_one_height', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_one_width', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_one_source', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_two_height', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_two_width', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_two_source', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_three_height', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_three_width', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_three_source', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_four_height', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_four_width', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image_four_source', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('link', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('icon', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('fb_created_time', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('fb_updated_time', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('position', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('comments', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('live_in_photos', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('live_on_homepage', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}